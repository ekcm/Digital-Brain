name: Deploy Docker to EC2

on:
  push:
    paths:
      - 'backend/**'
    branches:
      - main
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and save Docker image
        run: |
          cd backend
          docker build --no-cache -t digital-brain-backend .
          docker save digital-brain-backend > image.tar

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy and deploy to EC2
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          # Copy the Docker image to EC2
          cd backend
          echo "Copying Docker image to EC2..."
          scp -v -C -o StrictHostKeyChecking=no image.tar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/
          
          # Deploy on EC2
          echo "Starting deployment on EC2..."
          ssh -v -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            set -e  # Exit on any error
            echo "Loading Docker image..."
            docker load < image.tar
            
            echo "Stopping existing container..."
            docker stop digital-brain-backend || true
            docker rm digital-brain-backend || true
            
            echo "Starting new container..."
            docker run -d --name digital-brain-backend \
              --restart always \
              -p 8000:8000 \
              -e OPENAI_API_KEY='${OPENAI_API_KEY}' \
              -e PINECONE_API_KEY='${PINECONE_API_KEY}' \
              -e AWS_ACCESS_KEY_ID='${AWS_ACCESS_KEY_ID}' \
              -e AWS_SECRET_ACCESS_KEY='${AWS_SECRET_ACCESS_KEY}' \
              -e AWS_BUCKET_NAME='${AWS_BUCKET_NAME}' \
              -e AWS_REGION='${AWS_REGION}' \
              digital-brain-backend

            # Verify container is running
            echo "Verifying container status..."
            if ! docker ps | grep -q digital-brain-backend; then
              echo "Container failed to start. Here are the logs:"
              docker logs digital-brain-backend
              exit 1
            fi

            echo "Cleaning up..."
            rm image.tar
            
            echo "Deployment completed successfully!"
          EOF
